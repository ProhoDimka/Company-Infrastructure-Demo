controller:
  replicas: 1
  strategy: {}
  hostAliases: []
  nodeSelector: {}
  tolerations: []
  affinity: {}
  rbac:
    clusterRoleAggregation:
      viewerRoles: []
      editorRoles: []
  kubeRbacProxy:
    image:
      pullPolicy: IfNotPresent
      repository: gcr.io/kubebuilder/kube-rbac-proxy
      tag: v0.15.0
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 5m
        memory: 64Mi
  imagePullSecrets: []
  extraLabels: {}
  annotations: {}
  manager:
    image:
      pullPolicy: IfNotPresent
      repository: hashicorp/vault-secrets-operator
      tag: 0.7.1
    logging:
      level: info
      timeEncoding: rfc3339
      stacktraceLevel: panic
    globalTransformationOptions:
      excludeRaw: false
    backoffOnSecretSourceError:
      initialInterval: "5s"
      maxInterval: "60s"
      maxElapsedTime: "0s"
      randomizationFactor: 0.5
      multiplier: 1.5
    clientCache:
      persistenceModel: ""
      cacheSize:
      storageEncryption:
        enabled: false
        vaultConnectionRef: default
        keyName: ""
        transitMount: ""
        namespace: ""
        method: kubernetes
        mount: kubernetes
        kubernetes:
          role: ""
          serviceAccount:
          tokenAudiences: []
        jwt:
          role: ""
          secretRef: ""
          serviceAccount: "default"
          tokenAudiences: []
        appRole:
          roleId: ""
          secretRef: ""
        aws:
          role: ""
          region: ""
          headerValue: ""
          sessionName: ""
          stsEndpoint: ""
          iamEndpoint: ""
          secretRef: ""
          irsaServiceAccount: ""
        gcp:
          role: ""
          workloadIdentityServiceAccount: ""
          region: ""
          clusterName: ""
          projectID: ""
        params: {}
        headers: {}
    maxConcurrentReconciles:
    extraEnv: []
    extraArgs: []
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 10m
        memory: 64Mi
  podSecurityContext:
    runAsNonRoot: true
  securityContext:
    allowPrivilegeEscalation: false
  controllerConfigMapYaml:
    health:
      healthProbeBindAddress: :8081
    leaderElection:
      leaderElect: true
      resourceName: b0d477c0.hashicorp.com
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
  kubernetesClusterDomain: cluster.local
  terminationGracePeriodSeconds: 120
  preDeleteHookTimeoutSeconds: 120
metricsService:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  type: ClusterIP
defaultVaultConnection:
  enabled: ${isEnabledDefaultVaultConnection}
  address: "${defaultVaultConnectionAddress}"
  caCertSecret: ""
  tlsServerName: ""
  skipTLSVerify: false
  headers: {}
defaultAuthMethod:
  enabled: false
  namespace: ""
  allowedNamespaces: []
  method: kubernetes
  mount: kubernetes
  kubernetes:
    role: ""
    serviceAccount: default
    tokenAudiences: []
  jwt:
    role: ""
    secretRef: ""
    serviceAccount: "default"
    tokenAudiences: []
  appRole:
    roleId: ""
    secretRef: ""
  aws:
    role: ""
    region: ""
    headerValue: ""
    sessionName: ""
    stsEndpoint: ""
    iamEndpoint: ""
    secretRef: ""
    irsaServiceAccount: ""
  gcp:
    role: ""
    workloadIdentityServiceAccount: ""
    region: ""
    clusterName: ""
    projectID: ""
  params: {}
  headers: {}
telemetry:
  serviceMonitor:
    enabled: false
    selectors: {}
    scheme: https
    port: https
    path: /metrics
    bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    interval: 30s
    scrapeTimeout: 10s
tests:
  enabled: true
